<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $iduser
 * @property string $fullname
 * @property string $phone
 * @property string $email
 * @property string $address
 * @property string $message
 * @property timestamp $updated
 * @property Doctrine_Collection $Cart
 * 
 * @method integer             getIduser()   Returns the current record's "iduser" value
 * @method string              getFullname() Returns the current record's "fullname" value
 * @method string              getPhone()    Returns the current record's "phone" value
 * @method string              getEmail()    Returns the current record's "email" value
 * @method string              getAddress()  Returns the current record's "address" value
 * @method string              getMessage()  Returns the current record's "message" value
 * @method timestamp           getUpdated()  Returns the current record's "updated" value
 * @method Doctrine_Collection getCart()     Returns the current record's "Cart" collection
 * @method User                setIduser()   Sets the current record's "iduser" value
 * @method User                setFullname() Sets the current record's "fullname" value
 * @method User                setPhone()    Sets the current record's "phone" value
 * @method User                setEmail()    Sets the current record's "email" value
 * @method User                setAddress()  Sets the current record's "address" value
 * @method User                setMessage()  Sets the current record's "message" value
 * @method User                setUpdated()  Sets the current record's "updated" value
 * @method User                setCart()     Sets the current record's "Cart" collection
 * 
 * @package    quanaudio
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('iduser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fullname', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('phone', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('email', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('address', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('message', 'string', 2000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2000,
             ));
        $this->hasColumn('updated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Cart', array(
             'local' => 'iduser',
             'foreign' => 'iduser'));
    }
}